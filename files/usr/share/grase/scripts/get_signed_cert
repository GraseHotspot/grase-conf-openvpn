#!/bin/bash

set -e
set -u

FORCE=0
_DEBUG="off"

function DEBUG()
{
 if [ "$_DEBUG" == "on" ]; then  $@; fi
}

while getopts "fd" optname
  do
    case "$optname" in
      "f")
        # Force check (do daily)
        #echo "Option $optname is specified"
        FORCE="1"
        ;;
      "d")
        # Debug
        _DEBUG="on"
        ;;
      "?")
        #echo "Unknown option $OPTARG"
        ;;
      ":")
        #echo "No argument value for option $OPTARG"
        ;;
      *)
      # Should not occur
        #echo "Unknown error while processing options"
        ;;
    esac
  done


# Setup environment
MAC=$(/sbin/ip -0 -o link|grep link/ether|grep -v virbr|grep -v 'br-'|grep -v docker|grep -o -E 'ether ([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}'| awk '{print $2}' |tr -d ":"| sed 's/0*//'| head -n1)
KEYNAME="$HOSTNAME.$MAC.2018.vpn.grasehotspot.net"
KEYSTORE="/etc/grase/pki/keys/"

mkdir -p $KEYSTORE

# Have switch to force key check for activity

# Do build_key_request as per normal (if key doesn't exist)
if [ ! -f "$KEYSTORE$KEYNAME.key" ] || [ ! -f "$KEYSTORE$KEYNAME.csr" ]; then
	echo "Building new OpenVPN keys..."
    cd /usr/share/grase/easy-rsa/
	. vars > /dev/null
	KEY_DIR="$KEYSTORE"
	./build-req --batch "$KEYNAME"

    # Do below when we have all valid keys
	#ln -fs "$KEYSTORE$KEYNAME.key" $KEYSTOREgrase_client.key

fi

# Check if we have a key, and signed cert, if so we don't proceed
if [ -f "$KEYSTORE$KEYNAME.key" ] && [ -f "$KEYSTORE$KEYNAME.crt" ]; then
    ## if fingerprint of key and fingerprint of crt match (unless "switch is toggled"), exit
    keyfinger=$(openssl rsa -noout -modulus -in "$KEYSTORE$KEYNAME.key" |openssl md5)
    crtfinger=$(openssl x509 -noout -modulus -in "$KEYSTORE$KEYNAME.crt" |openssl md5)

    if [ "x$keyfinger" == "x$crtfinger" ] && [ "x$FORCE" != "x1" ]
    then
        DEBUG echo "We have a valid key and crt so exiting"
        exit 0
    fi
fi
# Upload csr and retrieve crt in one request
DEBUG echo "No valid key and crt so uploading (or forced)"

## allow selecting curl/wget?
#curl --data-urlencode "csr@$KEYSTORE$KEYNAME.csr" http://grasehotspot.net/getcrt.php
curl -s --data-urlencode "csr@$KEYSTORE$KEYNAME.csr"  http://grasehotspot.net/getcrt.php > "$KEYSTORE$KEYNAME.crt"

# Check that fingerprint matches, overwrite crt
keyfinger=$(openssl rsa -noout -modulus -in "$KEYSTORE$KEYNAME.key" |openssl md5)
crtfinger=$(openssl x509 -noout -modulus -in "$KEYSTORE$KEYNAME.crt" |openssl md5)

if [ "x$keyfinger" == "x$crtfinger" ]
then

    DEBUG echo "We have a valid key and crt so overwriting the grase_client files!"
    ln -fs "$KEYSTORE$KEYNAME.key" "$KEYSTORE/grase_client.key"
    ln -fs "$KEYSTORE$KEYNAME.crt" "$KEYSTORE/grase_client.crt"
    DEBUG echo "Keys loaded, restarting VPN"
    echo "VPN keys are valid, restarting VPN"
    if which invoke-rc.d >/dev/null 2>&1; then
	    invoke-rc.d openvpn restart grase || true
    else
	    /etc/init.d/openvpn restart grase || true
    fi
fi
